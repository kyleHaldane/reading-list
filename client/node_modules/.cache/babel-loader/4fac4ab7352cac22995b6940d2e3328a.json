{"ast":null,"code":"var _jsxFileName = \"/Users/kylehaldane/UCF/UCF-ORL-FSF-FT-11-2019-U-C/02-Homework/21-MERN/instructions/create-react-express/client/src/componenets/ResultCard/resultCard.js\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Button, Card, CardImg, CardText, CardBody, CardLink, CardTitle, CardSubtitle, Image } from 'reactstrap';\nimport API from \"../../utils/API\";\nexport default function resultCard(props) {\n  var data;\n\n  function databaseOrApi(props) {\n    //checks if the data comes from google books api\n    if (props.book.volumeInfo != undefined) {\n      data = {\n        title: props.book.volumeInfo.title,\n        authors: props.book.volumeInfo.authors,\n        description: props.book.volumeInfo.description,\n        image: props.book.volumeInfo.imageLinks === undefined ? \"\" : \"\".concat(props.book.volumeInfo.imageLinks.thumbnail)\n      };\n    } //defaults to coming from database if not from google books api\n    else data = {\n        title: props.book.title,\n        authors: props.book.authors,\n        description: props.book.description,\n        image: props.book.image,\n        id: props.book._id\n      };\n\n    return data;\n  } //Reassignes the data from props\n\n\n  data = databaseOrApi(props);\n\n  function save(event) {\n    event.preventDefault();\n    API.saveBook({\n      title: props.book.volumeInfo.title,\n      authors: props.book.volumeInfo.authors,\n      description: props.book.volumeInfo.description,\n      image: props.book.volumeInfo.imageLinks === undefined ? \"\" : \"\".concat(props.book.volumeInfo.imageLinks.thumbnail)\n    });\n  }\n\n  var remove = function remove(event) {\n    event.preventDefault();\n    API.deleteBook(data.id);\n    console.log(data);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, data.title), React.createElement(CardSubtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, data.authors.map(function (author) {\n    return author + \" \";\n  }))), React.createElement(Image, {\n    width: \"15%\",\n    src: \"\".concat(data.image),\n    alt: \"Card image cap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, data.description), props.book.volumeInfo != undefined ? React.createElement(Button, {\n    outline: true,\n    color: \"secondary\",\n    onClick: save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"save\") : React.createElement(Button, {\n    outline: true,\n    color: \"secondary\",\n    onClick: remove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"delete\"), React.createElement(Link, {\n    to: \"/detail/\" + data.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Button, {\n    outline: true,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"view\"))))));\n}","map":{"version":3,"sources":["/Users/kylehaldane/UCF/UCF-ORL-FSF-FT-11-2019-U-C/02-Homework/21-MERN/instructions/create-react-express/client/src/componenets/ResultCard/resultCard.js"],"names":["React","useEffect","Link","Container","Row","Col","Button","Card","CardImg","CardText","CardBody","CardLink","CardTitle","CardSubtitle","Image","API","resultCard","props","data","databaseOrApi","book","volumeInfo","undefined","title","authors","description","image","imageLinks","thumbnail","id","_id","save","event","preventDefault","saveBook","remove","deleteBook","console","log","map","author"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container, Row, Col, Button,\n  Card, CardImg, CardText, CardBody, CardLink,\n  CardTitle, CardSubtitle, Image\n} from 'reactstrap';\nimport API from \"../../utils/API\";\n\nexport default function resultCard(props) {\n\n  let data;\n\n  function databaseOrApi(props) {\n    //checks if the data comes from google books api\n    if (props.book.volumeInfo != undefined) {\n      data = {\n        title: props.book.volumeInfo.title,\n        authors: props.book.volumeInfo.authors,\n        description: props.book.volumeInfo.description,\n        image: props.book.volumeInfo.imageLinks === undefined\n          ? \"\"\n          : `${props.book.volumeInfo.imageLinks.thumbnail}`\n      }\n    }\n    //defaults to coming from database if not from google books api\n    else\n      data = {\n        title: props.book.title,\n        authors: props.book.authors,\n        description: props.book.description,\n        image: props.book.image,\n        id: props.book._id\n      }\n    return data;\n  }\n  //Reassignes the data from props\n  data = databaseOrApi(props);\n\n  function save(event) {\n    event.preventDefault();\n    API.saveBook({\n      title: props.book.volumeInfo.title,\n      authors: props.book.volumeInfo.authors,\n      description: props.book.volumeInfo.description,\n      image: props.book.volumeInfo.imageLinks === undefined\n        ? \"\"\n        : `${props.book.volumeInfo.imageLinks.thumbnail}`\n    })\n  }\n\n  const remove = (event) => {\n    event.preventDefault();\n    API.deleteBook(data.id);\n    console.log(data)\n  }\n\n  return (\n    <div>\n      <Container>\n        <Card>\n          <CardBody >\n            <CardTitle>{data.title}</CardTitle>\n            <CardSubtitle>{data.authors.map(author => author + \" \")}</CardSubtitle>\n          </CardBody>\n          <Image width=\"15%\" src={`${data.image}`} alt=\"Card image cap\" />\n          <CardBody>\n            <CardText>{data.description}</CardText>\n            {props.book.volumeInfo != undefined ?\n            <Button outline color=\"secondary\" onClick={save}>save</Button> :\n            <Button outline color=\"secondary\" onClick={remove}>delete</Button>}\n            <Link to={\"/detail/\" + data.id}>\n              <Button outline color=\"secondary\">view</Button>\n            </Link>\n          </CardBody>\n        </Card>\n      </Container>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}